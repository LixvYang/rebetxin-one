
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    server {
        listen 80;
        server_name demo.betxin.one www.demo.betxin.one;
        rewrite ^(.*)$ https://${server_name}$1 permanent;
    }


   # Settings for a TLS enabled server.
   server {
       listen       443 ssl;
       server_name  www.demo.betxin.one demo.betxin.one;
       #    root         /usr/share/nginx/html;

       ssl_certificate /etc/nginx/betxin/demo.betxin.one.crt;
       ssl_certificate_key /etc/nginx/betxin/demo.betxin.one.key;
       ssl_session_timeout  10m;

       ssl_session_cache shared:SSL:1m;
       ssl_protocols       TLSv1.1 TLSv1.2;
       ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
       ssl_prefer_server_ciphers on;

       # Load configuration files for the default server block.
       include /etc/nginx/default.d/*.conf;


        location / {
            proxy_pass http://0.0.0.0:4000;
        }

        location ~/api {
          #这处具体怎么写得根据后端的地址，我的是本地的127.0.0.1:8888/api/v1
          proxy_pass                 http://0.0.0.0:8888; #将请求路由中带有api字段的转发到后端运行的地址
          proxy_redirect             off;
          proxy_set_header           Host             $host;
          proxy_set_header           X-Real-IP        $remote_addr;
          proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
        }


       error_page 404 /404.html;
          location = /40x.html {
       }

       error_page 500 502 503 504 /50x.html;
           location = /50x.html {
       }
   }



    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    server {
      listen       80;
      server_name  www.betxin.one betxin.one;
      rewrite ^(.*)$ https://${server_name}$1 permanent;
    }

   # Settings for a TLS enabled server.
   server {
       listen       443 ssl;
       server_name  www.betxin.one betxin.one;
       #    root         /usr/share/nginx/html;

       ssl_certificate /etc/nginx/betxin/betxin.one.crt;
       ssl_certificate_key /etc/nginx/betxin/betxin.one.key;
       ssl_session_timeout  10m;

       ssl_session_cache shared:SSL:1m;
       ssl_protocols       TLSv1.1 TLSv1.2;
       ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
       ssl_prefer_server_ciphers on;

       # Load configuration files for the default server block.
       include /etc/nginx/default.d/*.conf;


        location / {
            proxy_pass http://127.0.0.1:8080;
        }
        location /admin {
            proxy_pass http://127.0.0.1:8080/admin;
        }
        # location / {
        #  root /home/Betxin/Backend/web/front/dist;
        #  index  index.html;
        # }

        # location /admin {
        #  root /home/Betxin/Backend/web/admin/dist;
        #  try_files $uri $uri/ /index.html;     #4.重定向,内部文件的指向
        # }

        location ~/api {
       #这处具体怎么写得根据后端的地址，我的是本地的127.0.0.1:8080/api/v1
                  proxy_pass                 http://127.0.0.1:8080; #将请求路由中带有api字段的转发到后端运行的地址
                  proxy_redirect             off;
                  proxy_set_header           Host             $host;
                  proxy_set_header           X-Real-IP        $remote_addr;
                  proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
              }


       error_page 404 /404.html;
          location = /40x.html {
       }

       error_page 500 502 503 504 /50x.html;
           location = /50x.html {
       }
   }

}
