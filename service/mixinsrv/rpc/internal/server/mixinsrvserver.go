// Code generated by goctl. DO NOT EDIT.
// Source: mixinsrv.proto

package server

import (
	"context"

	"github.com/lixvyang/rebetxin-one/service/mixinsrv/rpc/internal/logic"
	"github.com/lixvyang/rebetxin-one/service/mixinsrv/rpc/internal/svc"
	"github.com/lixvyang/rebetxin-one/service/mixinsrv/rpc/pb"
)

type MixinsrvServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMixinsrvServer
}

func NewMixinsrvServer(svcCtx *svc.ServiceContext) *MixinsrvServer {
	return &MixinsrvServer{
		svcCtx: svcCtx,
	}
}

// -----------------------mixinsrv-----------------------
func (s *MixinsrvServer) SendTransfer(ctx context.Context, in *pb.SendTransferReq) (*pb.SendTransferResp, error) {
	l := logic.NewSendTransferLogic(ctx, s.svcCtx)
	return l.SendTransfer(in)
}

func (s *MixinsrvServer) SendCard(ctx context.Context, in *pb.SendCardReq) (*pb.SendCardResp, error) {
	l := logic.NewSendCardLogic(ctx, s.svcCtx)
	return l.SendCard(in)
}

func (s *MixinsrvServer) SendMessage(ctx context.Context, in *pb.SendMessageReq) (*pb.SendMessageResp, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *MixinsrvServer) SendBtnGroup(ctx context.Context, in *pb.SendBtnGroupReq) (*pb.SendBtnGroupResp, error) {
	l := logic.NewSendBtnGroupLogic(ctx, s.svcCtx)
	return l.SendBtnGroup(in)
}
