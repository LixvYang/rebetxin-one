// Code generated by goctl. DO NOT EDIT.
package types

type Category struct {
	Id           int64  `json:"id"`
	CategoryName string `json:"category_name"`
}

type CreateCategoryReq struct {
	CategoryName string `json:"category_name"`
}

type CreateCategoryResp struct {
	Data string `json:"data"`
}

type GetCategoryReq struct {
	Id int64 `path:"id"`
}

type Refund struct {
	Id        int64  `json:"id"`
	Uid       string `json:"uid"`
	Tid       string `json:"tid"`
	TraceId   string `json:"trace_id"`
	AssetId   string `json:"asset_id"`
	YesPrice  string `json:"yes_price"`
	NoPrice   string `json:"no_price"`
	Memo      string `json:"memo"`
	CreatedAt int64  `json:"created_at"`
}

type CreateRefundReq struct {
	Tid    string `json:"tid"`
	Select int64  `json:"selects,option=0|1"` // 0 -> Yes 1 -> No
	Amount string `json:"amount"`
}

type GetRefundByTidReq struct {
	Tid string `path:"tid"`
}

type Topic struct {
	Id            int64  `json:"id"`
	Tid           string `json:"tid"`
	Cid           int64  `json:"cid"`
	Title         string `json:"title"`
	Intro         string `json:"intro"`
	Content       string `json:"content"`
	YesRatio      string `json:"yes_ratio"`
	NoRatio       string `json:"no_ratio"`
	YesPrice      string `json:"yes_ratio_price"`
	NoPrice       string `json:"no_ratio_price"`
	TotalPrice    string `json:"total_price"`
	CollectCount  int64  `json:"collect_count"`
	ReadCount     int64  `json:"read_count"`
	ImgUrl        string `json:"img_url"`
	IsStop        int64  `json:"is_stop"` // 0 没有 1停止
	RefundEndTime string `json:"refund_end_time"`
	EndTime       string `json:"end_time"`
	CreatedAt     string `json:"created_at"`
	UpdatedAt     string `json:"updated_at"`
	DeletedAt     string `json:"deleted_at"`
}

type GetTopicDataResp struct {
	Topic
	IsCollect int64     `json:"is_collect,options=0|1"`
	Category  *Category `json:"category"`
}

type CreateTopicReq struct {
	Cid           int64  `json:"cid"`
	Title         string `json:"title"`
	Intro         string `json:"intro"`
	Content       string `json:"content"`
	ImgUrl        string `json:"img_url"`
	EndTime       string `json:"end_time"`
	RefundEndTime string `json:"refund_end_time"`
}

type DeleteTopicReq struct {
	Tid string `json:"tid"`
}

type StopTopicReq struct {
	Tid string `json:"tid"`
}

type UpdateTopicReq struct {
	Topic
}

type GetTopicByTidReq struct {
	Tid string `path:"tid"`
}

type SearchTopicReq struct {
	Title   string `form:"title,optional"`
	Intro   string `form:"intro,optional"`
	Content string `form:"content,optional"`
}

type UpdateTopicPriceReq struct {
	Tid    string `path:"tid"`
	Select int64  `json:"select,options=0|1" comment:"0 YES 1 No"`
	Action int64  `json:"action,options=0|1" comment:"0 buy 1 sell"`
	Amount string `json:"amount"`
}

type ListTopicByCidReq struct {
	Cid       int64  `path:"cid"`
	PageToken string `form:"page_token,optional"`
}

type ListTopicByCidResp struct {
	List         []GetTopicDataResp `json:"list"`
	PrePageToken string             `json:"pre_page_token"`
}

type Topiccollect struct {
	Id        int64  `json:"id"`
	Uid       string `json:"uid"`
	Tid       string `json:"tid"`
	Status    int64  `json:"status"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type CreateTopicCollectReq struct {
	Tid string `json:"tid"`
}

type DeleteTopicCollectReq struct {
	Tid string `json:"tid"`
}

type Topicpurchase struct {
	Id        int64  `json:"id"`
	Uid       string `json:"uid"`
	Tid       string `json:"tid"`
	YesPrice  string `json:"yes_price"`
	NoPrice   string `json:"no_price"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	DeletedAt string `json:"deleted_at"`
}

type GetTopicpurchasesResp struct {
	Uid        string    `json:"uid"`
	IsShow     int64     `json:"is_show"`
	User       *UserInfo `json:"user"`
	TotalPrice string    `json:"total_price"`
}

type UserInfo struct {
	IdentityNumber string `json:"identity_number"`
	FullName       string `json:"full_name"`
	AvatarUrl      string `json:"avatar_url"`
}

type SigninReq struct {
	LoginMethod string `json:"login_method"`
	MixinToken  string `json:"mixin_token,optional"`
	Sign        string `json:"sign,optional"`
	SignedMsg   string `json:"sign_msg,optional"`
}

type SigninResp struct {
	Token string `json:"token"`
}

type User struct {
	IdentityNumber string `json:"identity_number"`
	Uid            string `json:"uid"`
	FullName       string `json:"full_name"`
	AvatarUrl      string `json:"avatar_url"`
	Biography      string `json:"biography"`
	CreatedAt      string `json:"created_at"`
	UpdatedAt      string `json:"updated_at"`
}

type CreateUserReq struct {
	IdentityNumber string `json:"identity_number"`
	Uid            string `json:"uid"`
	FullName       string `json:"full_name"`
	AvatarUrl      string `json:"avatar_url"`
	Biography      string `json:"biography"`
}
